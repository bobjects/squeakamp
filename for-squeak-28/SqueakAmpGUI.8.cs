'From Squeak2.8 of 13 June 2000 [latest update: #2359] on 21 December 2000 at 2:02:51 am'!"Change Set:		SqueakAmpGUI
Date:			19 December 2000
Author:			Bob Hartwig

Comments?  Question?  Email Bob Hartwig at bob@bobjectsinc.com
SqueakAmp web site - http://www.bobjectsinc.com/squeakamp"!IndentingListItemMorph subclass: #IconicIndentingListItemMorph	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'SqueakAmp-GUI'!ListItemWrapper subclass: #PlaylistWrapper	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'SqueakAmp-GUI'!IconicButton subclass: #BorderlessIconicButton	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'SqueakAmp-GUI'!AlignmentMorph subclass: #SqueakAmpAbstractMorph	instanceVariableNames: 'playerMorph currentPlaylist '	classVariableNames: ''	poolDictionaries: ''	category: 'SqueakAmp-GUI'!SqueakAmpAbstractMorph subclass: #SqueakAmpMorph	instanceVariableNames: 'availablePlaylistMorph currentPlaylistMorph selectedFile availablePlaylist '	classVariableNames: 'AutoExpandCurrentPlaylist RootSqueakAmpDirectory '	poolDictionaries: ''	category: 'SqueakAmp-GUI'!SqueakAmpMorph class	instanceVariableNames: ''!SqueakAmpAbstractMorph subclass: #SqueakAmpMorphWithoutPlaylists	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'SqueakAmp-GUI'!AlignmentMorph subclass: #SqueakAmpPlayerMorph	instanceVariableNames: 'playlist totalTimeLedMorph repeatButtonMorph shuffleButtonMorph sliderMorph trackNameMorph elapsedLedMorph '	classVariableNames: ''	poolDictionaries: ''	category: 'SqueakAmp-GUI'!SimpleHierarchicalListMorph subclass: #SqueakAmpPlaylistMorph	instanceVariableNames: 'playlist currentSelection menu iconForm '	classVariableNames: ''	poolDictionaries: ''	category: 'SqueakAmp-GUI'!AlignmentMorph subclass: #SqueakAmpTinyMorph	instanceVariableNames: 'playlist elapsedLedMorph trackNameMorph playPauseButtonMorph '	classVariableNames: ''	poolDictionaries: ''	category: 'SqueakAmp-GUI'!!IconicIndentingListItemMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!drawToggleOn: aCanvas in: aRectangle 	super drawToggleOn: aCanvas in: aRectangle.	complexContents hasContents 		ifFalse: [aCanvas paintImage: container iconForm at: aRectangle topLeft]! !!IconicIndentingListItemMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!owner: aMorph 	owner := aMorph! !!LedCharacterMorph methodsFor: 'accessing' stamp: 'bh 12/11/2000 20:45'!char: aCharacter 
	char _ aCharacter digitValue.
	char >= 0 & (char <= 35) ifFalse: [char _ 36].
	aCharacter == $-
		ifTrue:[ char _ 37 ].! !!LedCharacterMorph class methodsFor: 'initialization' stamp: 'bh 12/11/2000 20:36'!initialize

	CHSegmentOrigins _ {0.2@0.1. 0.2@0.45. 0.2@0.8}.
	CVSegmentOrigins _ {0.1@0.2. 0.1@0.55. 0.8@0.2. 0.8@0.55}.
	TSegments _ { 0.25@0.25. 0.45@0.25. 0.55@0.25. 0.75@0.25. 0.25@0.6. 0.45@0.6. 0.55@0.6. 0.75@0.6. }.
	BSegments _ { 0.45@0.4. 0.25@0.4. 0.75@0.4. 0.55@0.4. 0.45@0.76. 0.25@0.76. 0.75@0.76. 0.55@0.76. }.

	DSegments  _ {
	{false. false. false. false. false. false. false. false. }."0"
	{false. false. false. false. false. false. false. false. }."1"
	{false. false. false. false. false. false. false. false. }."2"
	{false. false. false. false. false. false. false. false. }."3"
	{false. false. false. false. false. false. false. false. }."4"
	{false. false. false. false. false. false. false. false. }."5"
	{false. false. false. false. false. false. false. false. }."6"
	{false. false. false. false. false. false. false. false. }."7"
	{false. false. false. false. false. false. false. false. }."8"
	{false. false. false. false. false. false. false. false. }."9"
	{false. false. false. false. false. false. false. false. }."A"
	{false. false. false. false. false. false. false. false. }."B"
	{false. false. false. false. false. false. false. false. }."C"
	{false. false. false. false. false. false. false. false. }."D"
	{false. false. false. false. false. false. false. false. }."E"
	{false. false. false. false. false. false. false. false. }."F"
	{false. false. false. false. false. false. false. false. }."G"
	{false. false. false. false. false. false. false. false. }."H"
	{false. false. false. false. false. false. false. false. }."I"
	{false. false. false. false. false. false. false. false. }."J"
	{false. false. false. true. false. false. false. false. }."K"
	{false. false. false. false. false. false. false. false. }."L"
	{true. false. false. true. false. false. false. false. }."M"
	{true. false. false. false. false. false. true. false. }."N"
	{false. true. true. false. true. false. false. true.  }."O"
	{false. false. false. false. false. false. false. false. }."P"
	{false. false. false. false. false. false. true. false. }."Q"
	{false. false. false. false. false. false. true. false. }."R"
	{false. false. false. false. false. false. false. false. }."S"
	{false. false. false. false. false. false. false. false. }."T"
	{false. false. false. false. false. false. false. false. }."U"
	{false. false. false. false. true. false. false. true. }."V"
	{false. false. false. false. false. true. true. false. }."W"
	{true. false. false. true. false. true. true. false. }."X"
	{false. false. false. false. false. false. false. false. }."Y"
	{false. false. false. true. false. true. false. false. }."Z"
	{false. false. false. false. false. false. false. false. }. "SPACE"
	{false. false. false. false. false. false. false. false. }}."-"

	CHSegments _ {
		{true. false. true}."0"
		{false. false. false}."1"
		{true. true. true}."2"
		{true. true. true}."3"
		{false. true. false}."4"
		{true. true. true}."5"
		{true. true. true}."6"
		{true. false. false}."7"
		{true. true. true}."8"
		{true. true. true}."9"
		{true. true. false}."A"
		{true. true. true}."B"
		{true. false. true}."C"
		{true. false. true}."D"
		{true. true. true}."E"
		{true. true. false}."F"
		{true. true. true}."G"
		{false. true. false}."H"
		{false. false. false}."I"
		{false. false. true}."J"
		{false. true. false}."K"
		{false. false. true}."L"
		{false. false. false}."M"
		{false. false. false}."N"
		{false. false. false}."O"
		{true. true. false}."P"
		{true. false. true}."Q"
		{true. true. false}."R"
		{true. true. true}."S"
		{false. true. true}."t"
		{false. false. true}."U"
		{false. false. false}."V"
		{false. false. false}."W"
		{false. false. false}."X"
		{false. true. true}."Y"
		{true. false. true}."Z"
		{false. false. false}. "SPACE"
		{false. true. false.}}. "-"
	CVSegments _ {
		{true. true.  true. true}."0"
		{false. false. true. true}."1"
		{false. true. true. false}."2"
		{false. false. true. true}."3"
		{true. false. true. true}."4"
		{true. false. false. true}."5"
		{true. true. false. true}."6"
		{false. false. true. true}."7"
		{true. true. true. true}."8"
		{true. false. true. true}."9"
		{true. true. true. true}."A"
		{true. true. true. true}."B"
		{true. true. false. false}."C"
		{true. true. true. true}."D"
		{true. true. false. false}."E"
		{true. true. false. false}."F"
		{true. true. false. true}."G"
		{true. true. true. true}."H"
		{true. true. false. false}."I"
		{false. true. true. true}."J"
		{true. true. false. true}."K"
		{true. true. false. false}."L"
		{true. true.  true. true}."N"
		{true. true. true. true}."N"
		{false. false. false. false}."O"
		{true. true. true. false}."P"
		{true. true.  true. true}."q"
		{true. true. true. false}."R"
		{true. false. false. true}."S"
		{true. true. false. false}."t"
		{true. true. true. true}."U"
		{true. false. true. false}."V"
		{true. true.  true. true}."w"
		{false. false. false. false}."x"
		{true. false. true. true}."y"
		{false. false. false. false}."z"
		{false. false. false. false}."SPACE"
		{false. false. false. false}}."-"! !!PlaylistWrapper methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!asString	^item displayString! !!PlaylistWrapper methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!contents	^item children 		collect: [:diskObject | self class with: diskObject model: item]! !!PlaylistWrapper methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!hasContents	^item children notEmpty! !!PlaylistWrapper methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!initializeFor: aSqueakAmpDiskObject model: aModel 	item := aSqueakAmpDiskObject.	model := aModel! !!PlaylistWrapper methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!item	^item! !!PlaylistWrapper class methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!with: aSqueakAmpDiskObject model: aModel 	^self new initializeFor: aSqueakAmpDiskObject model: aModel! !!SimpleButtonMorph methodsFor: 'accessing' stamp: 'bh 12/12/2000 14:36'!labelMorph

	^self findA: StringMorph
! !!BorderlessIconicButton methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!labelGraphic: aForm 	| oldLabel graphicalMorph |	(oldLabel := self findA: SketchMorph) ifNotNil: [oldLabel delete].	graphicalMorph := SketchMorph withForm: aForm.	self extent: graphicalMorph extent.	graphicalMorph position: self center - (graphicalMorph extent // 2).	self addMorph: graphicalMorph.	graphicalMorph lock! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addPlayerMorph	self addMorphBack: (playerMorph := SqueakAmpPlayerMorph 						forPlaylist: currentPlaylist)! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addPlaylistLabelMorphs	self subclassResponsibility! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!buildModel	currentPlaylist ifNil: [currentPlaylist := SqueakAmpPlaylist new]! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!buildMorph	self subclassResponsibility! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!buttonName: aString action: aSymbol form: aForm 	^(BorderlessIconicButton new)		target: self;		labelGraphic: aForm;		actionSelector: aSymbol;		yourself! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!clearSelectedFile	! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!currentPlaylist: aSqueakAmpPlaylist 	currentPlaylist := aSqueakAmpPlaylist! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!defaultBackgroundColor	^Color black! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!initializeForCurrentPlaylist: aPlaylist 	currentPlaylist := aPlaylist.	self initialize.	self buildModel.	self buildMorph! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!initializeWithoutCurrentPlaylist	self initialize.	self buildModel.	self buildMorph! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!openWindowClassInOurPosition: aClass 	| owningWindow position |	owningWindow := self ownerChain 				detect: [:own | own isKindOf: SystemWindow]				ifNone: [nil].	owningWindow ifNotNil: 			[position := owningWindow position.			owningWindow delete]		ifNil: 			[position := self position.			self delete].	(aClass openInWindowWithCurrentPlaylist: currentPlaylist) 		position: position! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!perform: selector orSendTo: otherTarget 	"Selector was just chosen from a menu by a user.  If can respond, thenperform it on myself. If not, send it to otherTarget, presumably theeditPane from which the menu was invoked."	(self respondsTo: selector) 		ifTrue: [^self perform: selector]		ifFalse: [^otherTarget perform: selector]! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!step	self updateDisplay! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!stepTime	^1000! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!updateDisplay	! !!SqueakAmpAbstractMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!wantsSteps	^true! !!SqueakAmpAbstractMorph class methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!openInWindow	((self new)		initializeWithoutCurrentPlaylist;		openInWindowLabeled: 'SqueakAmp' inWorld: self currentWorld) 			labelColor: Color cyan! !!SqueakAmpAbstractMorph class methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!openInWindowWithCurrentPlaylist: aPlaylist 	| morph window |	(window := (morph := self new)				initializeForCurrentPlaylist: aPlaylist;				openInWindowLabeled: 'SqueakAmp' inWorld: self currentWorld) 			labelColor: Color cyan.	morph clearSelectedFile.	^window! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addPlaylistLabelMorphs	| r label1Morph label2Morph |	r := (AlignmentMorph newRow)				hResizing: #spaceFill;				vResizing: #shrinkWrap;				color: Color transparent.	"borderWidth:1; borderColor:Color white;"	r addMorphBack: ((AlignmentMorph newVariableTransparentSpacer)				orientation: #vertical;				centering: #center;				addMorphBack: ((StringMorph new)							color: Color gray;							contents: 'SqueakAmp Playlist')).	r addMorphBack: (self 				buttonName: ''				action: #hideButtonClicked				form: self hideButtonForm).	self addMorphBack: r.	r := (AlignmentMorph newRow)				vResizing: #shrinkWrap;				hResizing: #spaceFill;				color: Color transparent.	"borderWidth:1; borderColor: Color white;"	r addTransparentSpacerOfSize: 5 @ 0.	r addMorphBack: (AlignmentMorph newVariableTransparentSpacer 				addMorphBack: (label1Morph := (StringMorph new)								color: Color gray;								contents: 'Available:')).	"borderWidth:1; borderColor: Color white;"	r addTransparentSpacerOfSize: 5 @ 0.	r addMorphBack: ((AlignmentMorph newVariableTransparentSpacer)				addMorphBack: (label2Morph := (StringMorph new)									color: Color gray;									contents: 'Now Playing:';									yourself);				yourself).	"borderWidth:1; borderColor: Color white; "	r addTransparentSpacerOfSize: 5 @ 0.	self addMorphBack: r.	label1Morph extent: (label1Morph extent max: label2Morph extent).	label2Morph extent: (label1Morph extent max: label2Morph extent)! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addPlaylistMorphs	| r |	r := (AlignmentMorph newRow)				hResizing: #spaceFill;				color: Color transparent;				yourself.	"borderWidth:1; 		borderColor:Color white; "	"centering: #center;"	r addTransparentSpacerOfSize: 5 @ 0.	r addMorphBack: (AlignmentMorph newVariableTransparentSpacer 				addMorphBack: (availablePlaylistMorph := (SqueakAmpPlaylistMorph new)								menu: self availablePlaylistMorphMenu;								playlist: availablePlaylist;								yourself)).	"borderWidth:1; borderColor: Color white;"	r addTransparentSpacerOfSize: 5 @ 0.	r addMorphBack: (AlignmentMorph newVariableTransparentSpacer 				addMorphBack: (currentPlaylistMorph := (SqueakAmpPlaylistMorph new)								menu: self currentPlaylistMorphMenu;								playlist: currentPlaylist;								yourself)).	"borderWidth:1; borderColor: Color white;"	r addTransparentSpacerOfSize: 5 @ 0.	self addMorphBack: r.	self addMorphBack: ((AlignmentMorph newRow)				vResizing: #shrinkWrap;				color: Color transparent;				addMorphBack: ((Morph new)							color: Color transparent;							extent: 0 @ 5;							yourself);				yourself)! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!autoExpandCurrentPlaylist	^AutoExpandCurrentPlaylist ifNil: [AutoExpandCurrentPlaylist := true]! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!autoExpandCurrentPlaylist: aBoolean 	AutoExpandCurrentPlaylist := aBoolean.	self updateDisplay.	aBoolean ifTrue: [self basicUpdateDisplay].	self updateCurrentPlaylistMorph! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!availablePlaylistMenuAddToPlaylist	| selection |	(selection := self availableSelection) ifNotNil: 			[Cursor wait showWhile: 					[currentPlaylist addRootDiskObject: selection.					self updateCurrentPlaylistMorph]]! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!availablePlaylistMenuPlayNow	| selection |	(selection := self availableSelection) ifNotNil: 			[currentPlaylist stateMachine playDiskObjectSelected: selection.			self updateCurrentPlaylistMorph.			self updateDisplay]! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!availablePlaylistMenuRefresh	self setRootDirectoryPathname: self rootSqueakAmpDirectory pathName! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!availablePlaylistMenuSetRootDirectory	self setRootDirectoryPathname: (FillInTheBlank 				request: 'Enter the new root Directory'				initialAnswer: self rootSqueakAmpDirectory pathName)! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!availablePlaylistMorphMenu	^(MenuMorph new)		add: 'Add to playlist'			target: self			selector: #availablePlaylistMenuAddToPlaylist;		add: 'Play now'			target: self			selector: #availablePlaylistMenuPlayNow;		addLine;		add: 'Set root directory...'			target: self			selector: #availablePlaylistMenuSetRootDirectory;		add: 'Refresh'			target: self			selector: #availablePlaylistMenuRefresh;		yourself	"	add: 'Show times' target:self selector: #availablePlaylistMenuShowTimes ; "! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!availableSelection	^availablePlaylistMorph selection! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!basicUpdateDisplay	| currentFile |	currentPlaylistMorph collapseAll.	(currentFile := currentPlaylist currentFile) ifNotNil: 			[currentFile withAllParents do: 					[:file | 					| itemMorph |					currentPlaylistMorph expandItem: file].			currentPlaylistMorph selection: currentFile]! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!buildModel	super buildModel.	availablePlaylist := SqueakAmpPlaylist 				newForDiskObject: self rootSqueakAmpDirectory! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!buildMorph	self orientation: #vertical.	self color: Color black.	self borderWidth: 1.	self borderColor: Color gray.	self addPlayerMorph.	self addPlaylistLabelMorphs.	self addPlaylistMorphs! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!clearSelectedFile	selectedFile := nil! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!currentPlaylistMenuAutoExpandCurrentTrack	self autoExpandCurrentPlaylist: self autoExpandCurrentPlaylist not! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!currentPlaylistMenuClearPlaylist	currentPlaylist rootDiskObjects: OrderedCollection new.	self updateCurrentPlaylistMorph! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!currentPlaylistMenuLoadPlaylist	| filename playlist |	(filename := FillInTheBlank request: 'Load playlist from file:'				initialAnswer: 'playlist.sap') ifNotNil: 				[(playlist := SqueakAmpPlaylist loadFromPathName: filename) 					isSqueakAmpPlaylist 						ifTrue: 							[currentPlaylist := playlist.							playerMorph playlist: currentPlaylist.							self updateCurrentPlaylistMorph.							self updateDisplay]]! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!currentPlaylistMenuPlayNow	| selection |	(selection := self currentSelection) ifNotNil: 			[currentPlaylist stateMachine playDiskObjectSelected: selection.			self updateDisplay]! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!currentPlaylistMenuRemoveFromPlaylist	| rootObject |	(rootObject := self currentPlaylistRootForSelection) ifNotNil: 			[currentPlaylist rootDiskObjects: ((currentPlaylist rootDiskObjects)						remove: rootObject;						yourself)].	self updateCurrentPlaylistMorph! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!currentPlaylistMenuSavePlaylist	| filename |	(filename := FillInTheBlank request: 'Save playlist to file:'				initialAnswer: 'playlist.sap') 			ifNotNil: [currentPlaylist saveToPathName: filename]! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!currentPlaylistMorph	^currentPlaylistMorph! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!currentPlaylistMorphMenu	^(MenuMorph new)		add: 'Remove from playlist'			target: self			selector: #currentPlaylistMenuRemoveFromPlaylist;		add: 'Play now'			target: self			selector: #currentPlaylistMenuPlayNow;		addLine;		add: 'Clear playlist'			target: self			selector: #currentPlaylistMenuClearPlaylist;		add: 'Load playlist...'			target: self			selector: #currentPlaylistMenuLoadPlaylist;		add: 'Save playlist'			target: self			selector: #currentPlaylistMenuSavePlaylist;		addLine;		add: 'Auto-expand current track'			target: self			selector: #currentPlaylistMenuAutoExpandCurrentTrack;		yourself	"	add: 'Load WinAmp playlist...' target:self selector: #currentPlaylistMenuLoadWinAmpPlaylist ; "	"	add: 'Show times' target:self selector: #currentPlaylistMenuShowTimes ;  "	"	add: 'Show song numbers' target:self selector: #currentPlaylistMenuShowSongNumbers ;  "! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!currentPlaylistRootForSelection	| selection |	selection := self currentSelection.	[selection isNil or: [currentPlaylist rootDiskObjects includes: selection]] 		whileFalse: [selection := selection parent].	^selection! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!currentSelection	^currentPlaylistMorph selection! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!hideButtonClicked	self openWindowClassInOurPosition: SqueakAmpMorphWithoutPlaylists! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!hideButtonForm	^Form 		extent: 27 @ 14		depth: 32		fromArray: #(11384245 11910589 10855853 10855853 10263708 9737372 9737372 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211020 9211028 8684684 8684684 8684684 8684684 9213076 9211020 5921379 9739429 13553358 16777215 15724527 15724527 15198183 14606046 14606046 14606046 14606046 14079702 14606046 14606046 14079702 14606046 14606046 14079702 14606046 14079702 14079702 14079702 14079702 13553358 13027014 13027014 4868690 1052688 9739429 11910589 16250871 11384245 10855845 10266021 10266021 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 9739429 10263708 9739420 9213076 9211020 9739420 4342346 1052688 9213084 11384245 15724527 10855845 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 10263708 4342338 1052688 9211028 10855845 15724527 10855845 11711154 3750210 11711154 11711154 3750210 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 11711154 3750210 3750210 3750210 11711154 11711154 9737372 4342338 1052688 8686740 10266021 15198183 10266021 11711154 3750210 11711154 11711154 3750210 11711154 11711154 3750210 11711154 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 11711154 11711154 9737364 3750210 1052688 8094860 10266021 15198183 10266021 11711154 3750210 3750210 3750210 3750210 11711154 11711154 3750210 11711154 11711154 3750210 11711154 11711154 3750210 11711154 3750210 3750210 3750210 11711154 11711154 9735316 3750210 1052688 8094860 9739420 14606046 10266021 11711154 3750210 11711154 11711154 3750210 11711154 11711154 3750210 11711154 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 11711154 11711154 9211028 3750210 1052688 8094852 9739420 14079702 10266021 11711154 3750210 11711154 11711154 3750210 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 11711154 3750210 3750210 3750210 11711154 11711154 9737364 3750210 1052688 8092548 9739420 14079702 9737364 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 9737364 4342338 1052688 8094852 10266021 13553358 8686732 9737364 9213076 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 8686732 9211020 8686740 9211020 9213076 8686732 9213076 8686732 9211020 8094852 9737372 4342338 1052688 8094860 11382189 10855853 8094852 8684684 8094852 8092539 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 8092539 7568251 7568251 7568251 8092539 7568251 8094852 8094852 8094852 7039859 5397082 2171169 9739420 7039859 3225913 3225913 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2697513 2697513 2699569 2699569 2699569 2699569 2699569 2699569 3225913 4342346 2699569 2171169 2171169 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 2171169)		offset: 0 @ 0! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!rootSqueakAmpDirectory	^RootSqueakAmpDirectory ifNil: 			[RootSqueakAmpDirectory := SqueakAmpDirectory 						newForPathName: FileDirectory default pathName]! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!setRootDirectoryPathname: aString 	aString notEmpty 		ifTrue: 			[| squeakAmpDir |			Cursor wait showWhile: 					[squeakAmpDir := SqueakAmpDiskObject newForPathName: aString.					squeakAmpDir isDirectory 						ifFalse: [PopUpMenu inform: 'There is no directory named ' , aString]						ifTrue: 							[RootSqueakAmpDirectory := squeakAmpDir.							availablePlaylist rootDiskObjects: { 										RootSqueakAmpDirectory}.							self updateAvailablePlaylistMorph]]]! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!updateAvailablePlaylistMorph	availablePlaylistMorph playlist: availablePlaylist! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!updateCurrentPlaylistMorph	currentPlaylistMorph playlist: currentPlaylist.	self clearSelectedFile! !!SqueakAmpMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!updateDisplay	self autoExpandCurrentPlaylist 		ifTrue: 			[selectedFile = currentPlaylist currentFile 				ifFalse: 					[selectedFile := currentPlaylist currentFile.					self basicUpdateDisplay]]! !!SqueakAmpMorphWithoutPlaylists methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addPlaylistLabelMorphs	| r |	r := (AlignmentMorph newRow)				hResizing: #spaceFill;				vResizing: #shrinkWrap;				color: Color transparent.	"borderWidth:1; borderColor:Color white;"	r addMorphBack: ((AlignmentMorph newVariableTransparentSpacer)				orientation: #vertical;				centering: #center;				addMorphBack: ((StringMorph new)							color: Color gray;							contents: 'SqueakAmp Playlist')).	r addMorphBack: (self 				buttonName: ''				action: #showButtonClicked				form: self showButtonForm).	self addMorphBack: r! !!SqueakAmpMorphWithoutPlaylists methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!buildMorph	self orientation: #vertical.	self color: Color black.	self borderWidth: 1.	self borderColor: Color gray.	self addPlayerMorph.	self addPlaylistLabelMorphs! !!SqueakAmpMorphWithoutPlaylists methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!showButtonClicked	self openWindowClassInOurPosition: SqueakAmpMorph! !!SqueakAmpMorphWithoutPlaylists methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!showButtonForm	^Form 		extent: 27 @ 14		depth: 32		fromArray: #(11384245 11910589 10855853 10855853 10263708 9737372 9737372 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211020 9211028 8684684 8684684 8684684 8684684 9213076 9211020 5921379 9739429 13553358 16777215 15724527 15724527 15198183 14606046 14606046 14606046 14606046 14079702 14606046 14606046 14079702 14606046 14606046 14079702 14606046 14079702 14079702 14079702 14079702 13553358 13027014 13027014 4868690 1052688 9739429 11910589 16250871 11384245 10855845 10266021 10266021 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 9739429 10263708 9739420 9213076 9211020 9739420 4342346 1052688 9213084 11384245 15724527 10855845 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 10263708 4342338 1052688 9211028 10855845 15724527 10855845 3750210 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 11711154 3750210 3750210 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 9737372 4342338 1052688 8686740 10266021 15198183 10266021 3750210 11711154 11711154 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 11711154 3750210 11711154 9737364 3750210 1052688 8094860 10266021 15198183 10266021 3750210 3750210 3750210 11711154 3750210 3750210 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 3750210 11711154 3750210 11711154 9735316 3750210 1052688 8094860 9739420 14606046 10266021 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 3750210 11711154 3750210 11711154 9211028 3750210 1052688 8094852 9739420 14079702 10266021 3750210 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 11711154 3750210 3750210 11711154 11711154 11711154 3750210 11711154 3750210 11711154 11711154 9737364 3750210 1052688 8092548 9739420 14079702 9737364 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 9737364 4342338 1052688 8094852 10266021 13553358 8686732 9737364 9213076 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 8686732 9211020 8686740 9211020 9213076 8686732 9213076 8686732 9211020 8094852 9737372 4342338 1052688 8094860 11382189 10855853 8094852 8684684 8094852 8092539 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 8092539 7568251 7568251 7568251 8092539 7568251 8094852 8094852 8094852 7039859 5397082 2171169 9739420 7039859 3225913 3225913 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2697513 2697513 2699569 2699569 2699569 2699569 2699569 2699569 3225913 4342346 2699569 2171169 2171169 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 2171169)		offset: 0 @ 0! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addButtons	| r |	r := (AlignmentMorph newRow)				vResizing: #shrinkWrap;				color: Color transparent.	r addMorphBack: (Morph new extent: 3 @ 0).	r addMorphBack: (self 				buttonName: '|<'				action: #previousButtonClicked				form: self previousButtonForm).	r addMorphBack: (self 				buttonName: '>'				action: #playButtonClicked				form: self playButtonForm).	r addMorphBack: (self 				buttonName: '| |'				action: #pauseButtonClicked				form: self pauseButtonForm).	r addMorphBack: (self 				buttonName: '='				action: #stopButtonClicked				form: self stopButtonForm).	r addMorphBack: (self 				buttonName: '>|'				action: #nextButtonClicked				form: self nextButtonForm).	r addMorphBack: ((Morph new)				extent: 205 @ 1;				color: Color transparent).	r addMorphBack: (shuffleButtonMorph := self 						buttonName: ''						action: #shuffleButtonClicked						form: self noShuffleButtonForm).	r addMorphBack: ((Morph new)				extent: 5 @ 1;				color: Color transparent).	r addMorphBack: (repeatButtonMorph := self 						buttonName: ''						action: #repeatButtonClicked						form: self repeatButtonForm).	"r addMorphBack: (Morph new extent: 30@1; color: Color transparent)."	self addMorphBack: r! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addLEDAndSliderMorphs	| r |	r := (AlignmentMorph newRow)				color: Color transparent;				inset: 0;				centering: #center;				hResizing: #shrinkWrap;				vResizing: #rigid;				height: 15.	r addMorphBack: self ledMorphs.	r addMorphBack: ((Morph new)				extent: 6 @ 1;				color: Color transparent).	r addMorphBack: self sliderMorph.	"	r addMorphBack: (Morph new extent: 6@1; color: Color transparent)."	self addMorphBack: r! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addTrackNameMorph	| r |	r := (AlignmentMorph newRow)				vResizing: #shrinkWrap;				color: Color transparent.	r addMorphBack: (trackNameMorph := (StringMorph new)						color: Color white;						contents: '').	r addMorphBack: AlignmentMorph newVariableTransparentSpacer.	r addMorphBack: (self 				buttonName: ''				action: #tinyButtonClicked				form: self tinyButtonForm).	self addMorphBack: r! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addTrackOrderingButtons	! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addTransportButtons	! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!buildMorph	self		orientation: #vertical;		vResizing: #shrinkWrap;		color: Color black.	self borderWidth: 1.	self borderColor: Color gray.	self addTrackNameMorph.	self addLEDAndSliderMorphs.	self addButtons.	self updateShuffleAndRepeatButtons! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!buttonName: aString action: aSymbol 	^(SimpleButtonMorph new)		useSquareCorners;		target: self;		label: aString;		actionSelector: aSymbol;		yourself! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!buttonName: aString action: aSymbol form: aForm 	^(BorderlessIconicButton new)		target: self;		labelGraphic: aForm;		actionSelector: aSymbol! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!fileShuffleButtonForm	^Form 		extent: 77 @ 14		depth: 32		fromArray: #(10988716 11515831 11779003 11646905 11119537 10855853 10855853 10658472 10395296 10132124 9868956 9737372 9737372 9605786 9342614 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 8684684 8684684 8684684 8684684 8816782 9080978 9212562 9211534 9803157 10067619 10660015 12566979 14342874 15921906 16514043 15987699 15724527 15724527 15592941 15329769 15000804 14737632 14606046 14606046 14606046 14606046 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 13553358 13553358 13553358 13553358 13421772 13158600 10987433 6908271 7303028 10067619 10265771 11318455 12831177 14738146 14474462 12040125 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10266021 10263708 9739429 10263708 9739420 10265250 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10266021 10263708 9739429 9607834 9344662 9212562 9211534 9343120 9607320 8357255 5658718 7039855 9804190 9739426 10792110 12436419 14606560 14474974 12041661 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10855845 11384245 10857901 10857901 10855845 11252659 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10855845 11384245 10857901 10659237 10397093 10002592 9476248 9475734 10001050 8750469 5789784 7039851 9475481 9344154 10658982 12434877 14606046 14343388 11581367 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 11711154 11711154 11711154 11711154 11711154 11711154 10397607 10133664 9869464 9737366 9737370 8355717 5658200 7039851 9474197 9079956 9870500 11449787 13948632 13948630 11449781 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 3750210 11711154 11711154 11711154 11711154 3750210 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 10529193 10002592 9476248 9344150 9606298 8224133 5197656 6710891 9146517 8621202 9673886 11318195 13488079 13488079 11318195 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 3750210 3750210 3750210 11711154 11711154 3750210 11711154 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 11711154 11711154 11711154 11711154 11711154 11711154 10529193 10002592 9476248 9343636 9604756 8222591 5197142 6710891 9146512 8489610 9279126 10923180 13356493 13488079 11318195 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 3750210 11711154 11711154 11711154 11711154 3750210 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 11711154 11711154 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 10397607 10002080 9474712 9211028 9211028 7829375 5066070 6710891 9146512 8489610 9279126 10791596 12961741 13092813 11184812 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 11711154 3750210 3750210 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 11711154 11711154 11711154 11711154 11711154 11711154 10264222 10001050 9475734 9213076 9213076 7830909 5066575 6710886 8817552 8094602 9147286 10791594 12961735 12961735 10791594 10266021 10266021 10263708 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10263708 10266021 10266021 10266021 10263708 10266021 10263708 10266021 10266021 10266021 10263708 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10263708 10266021 10266021 10266021 10263708 10001052 9475740 9081496 8818320 8949390 9474706 8355711 5658198 7039851 9145232 8619404 9673372 11055023 12698563 12303805 9870492 9213076 8686732 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 8686740 9211020 9213076 9211020 8686740 9211020 9213076 8686732 9213076 9211020 8686740 9211020 8686740 9211534 9213076 8686732 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 8686740 9211020 9213076 9211020 8686740 9211020 9213076 8686732 9213076 9211020 8686740 8686738 8686734 8686218 8685190 8947850 9474198 8355717 5658200 7039851 9146517 8883860 10527396 11250605 10987437 10264228 9212564 8686218 8685190 8488068 8225924 8094081 8093053 7961467 7699323 7568251 7568251 7568251 7568251 7568251 7568251 7699323 7961467 7961467 7699323 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7699323 7961467 7961467 7699323 7568251 8094852 8094852 8094852 8094852 7830911 7303543 6579820 5791328 7633016 10067614 9015185 7698301 5921890 3751745 2699057 2698033 2698033 2699057 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699055 2698027 2697513 2697513 2698027 2699055 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699055 2698027 2697513 2697513 2698027 2699569 2699569 2831155 3094327 3488573 4013893 3882307 3093815 6120034 5855577 1842204 1315860 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 5197647)		offset: 0 @ 0! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!folderShuffleButtonForm	^Form 		extent: 77 @ 14		depth: 32		fromArray: #(10988716 11515831 11779003 11646905 11119537 10855853 10855853 10658472 10395296 10132124 9868956 9737372 9737372 9605786 9342614 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 8684684 8684684 8684684 8684684 8816782 9080978 9212562 9211534 9803157 10067619 10660015 12566979 14342874 15921906 16514043 15987699 15724527 15724527 15592941 15329769 15000804 14737632 14606046 14606046 14606046 14606046 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 13553358 13553358 13553358 13553358 13421772 13158600 10987433 6908271 7303028 10067619 10265771 11318455 12831177 14738146 14474462 12040125 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10266021 10263708 9739429 10263708 9739420 10265250 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10266021 10263708 9739429 9607834 9344662 9212562 9211534 9343120 9607320 8357255 5658718 7039855 9804190 9739426 10792110 12436419 14606560 14474974 12041661 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10855845 11384245 10857901 10857901 10855845 11252659 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10855845 11384245 10857901 10659237 10397093 10002592 9476248 9475734 10001050 8750469 5789784 7039851 9475481 9344154 10658982 12434877 14606046 14343388 11581367 11711154 11711154 3750210 3750210 3750210 11711154 11711154 3750210 3750210 11711154 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 11711154 11711154 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 11711154 10397607 10133664 9869464 9737366 9737370 8355717 5658200 7039851 9474197 9079956 9870500 11449787 13948632 13948630 11449781 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 11711154 10529193 10002592 9476248 9344150 9606298 8224133 5197656 6710891 9146517 8621202 9673886 11318195 13488079 13488079 11318195 11711154 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 3750210 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 11711154 11711154 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 11711154 10529193 10002592 9476248 9343636 9604756 8222591 5197142 6710891 9146512 8489610 9279126 10923180 13356493 13488079 11318195 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 3750210 11711154 11711154 11711154 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 11711154 10397607 10002080 9474712 9211028 9211028 7829375 5066070 6710891 9146512 8489610 9279126 10791596 12961741 13092813 11184812 11711154 11711154 3750210 11711154 11711154 11711154 11711154 3750210 3750210 11711154 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 11711154 3750210 3750210 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 11711154 10264222 10001050 9475734 9213076 9213076 7830909 5066575 6710886 8817552 8094602 9147286 10791594 12961735 12961735 10791594 10266021 10266021 10263708 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10263708 10266021 10266021 10266021 10263708 10266021 10263708 10266021 10266021 10266021 10263708 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10263708 10266021 10266021 10266021 10263708 10001052 9475740 9081496 8818320 8949390 9474706 8355711 5658198 7039851 9145232 8619404 9673372 11055023 12698563 12303805 9870492 9213076 8686732 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 8686740 9211020 9213076 9211020 8686740 9211020 9213076 8686732 9213076 9211020 8686740 9211020 8686740 9211534 9213076 8686732 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 8686740 9211020 9213076 9211020 8686740 9211020 9213076 8686732 9213076 9211020 8686740 8686738 8686734 8686218 8685190 8947850 9474198 8355717 5658200 7039851 9146517 8883860 10527396 11250605 10987437 10264228 9212564 8686218 8685190 8488068 8225924 8094081 8093053 7961467 7699323 7568251 7568251 7568251 7568251 7568251 7568251 7699323 7961467 7961467 7699323 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7699323 7961467 7961467 7699323 7568251 8094852 8094852 8094852 8094852 7830911 7303543 6579820 5791328 7633016 10067614 9015185 7698301 5921890 3751745 2699057 2698033 2698033 2699057 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699055 2698027 2697513 2697513 2698027 2699055 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699055 2698027 2697513 2697513 2698027 2699569 2699569 2831155 3094327 3488573 4013893 3882307 3093815 6120034 5855577 1842204 1315860 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 5197647)		offset: 0 @ 0! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!initializeForPlaylist: aSqueakAmpPlaylist 	playlist := aSqueakAmpPlaylist.	self buildMorph! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!ledMorphs	| r |	r := (AlignmentMorph newRow)				color: Color cyan darker darker darker;				inset: 0;				centering: #bottomRight;				hResizing: #shrinkWrap;				vResizing: #rigid;				height: 30.	r addMorphBack: (elapsedLedMorph := (LedMorph new)						color: Color cyan;						highlighted: true;						chars: 6;						extent: 25 @ 30;						string: '00:00').	r addMorphBack: ((Morph new)				extent: 4 @ 1;				color: Color transparent).	r addMorphBack: (totalTimeLedMorph := (LedMorph new)						chars: 6;						color: Color cyan;						extent: 12 @ 15;						string: '00:00').	r addMorphBack: ((Morph new)				extent: 5 @ 1;				color: Color transparent).	^r! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!nextButtonForm	^Form 		extent: 22 @ 18		depth: 32		fromArray: #(11382197 11908541 11908541 11908541 11382197 10855853 10263717 10263717 10263717 10263708 10263717 10263708 10263717 10263708 10263708 9737372 9737372 9737372 9737372 9737364 9737372 7568260 11908541 15728639 15728639 15202295 14610415 14084071 14081758 13557470 13557470 13557470 13557470 13557470 13557470 13557470 13557470 13555414 13031126 13031126 12439246 12439246 9211028 4868690 11382197 15726583 13029070 12437190 12434877 11910589 11910589 11910589 11908533 11384245 11908541 11908533 11908533 11384245 11908541 11384245 11384245 11382189 10857901 9211028 7041907 4342346 11382197 14610415 12437190 12437190 12437190 12437190 12437190 12434877 12437190 12437190 11910589 12437190 11912902 12437190 11910589 12437190 11910589 11910589 11384245 9211028 6513507 3750210 10855853 14608359 11910589 12434877 12437190 12437190 1050640 2695465 12437190 12437190 13029070 12437190 13027014 1050640 1576984 2171169 13027014 11912902 11384245 9211028 5921379 3750210 10855845 14081758 11910589 11912902 12437190 13029070 1050640 9213084 2695465 13029070 13029070 13029070 13029070 1576984 10263717 15202295 12437190 12437190 11384245 9211028 5921370 3750210 10263717 13557470 11384245 12434877 12437190 13029070 1576984 10263717 9213084 2168865 13029070 13029070 13029070 1050640 10263717 15728639 13027014 12437190 11384245 9211028 5921370 3223865 10263717 13557470 11908533 11910589 12437190 13029070 1050640 10263717 10263717 9213084 2168865 13029070 13029070 1576984 10263717 15728639 12439246 12437190 11384245 9211028 5395034 3750201 10263717 13555414 11384245 11910589 12437190 13029070 1050640 10263717 10263717 10263717 9213084 3750201 13029070 1050640 10263717 15728639 13027014 12437190 11384245 9211020 5395034 3750201 10263717 13555414 11384245 12434877 12437190 13029070 1576984 10263717 10263717 10263717 10855853 15202295 13029070 1576984 10263717 15728639 12439246 12434877 11384245 9211028 5395034 3223865 9739420 13555414 11384245 11910589 12437190 13029070 1050640 10263717 10263717 10855853 15728639 13029070 13555414 1050640 10263717 15728639 13027014 12437190 11384245 9211028 5921370 3750201 9737372 13031126 11384245 11910589 12437190 13029070 1576984 10263717 10855853 15728639 13029070 13029070 13029070 1050640 10263717 15728639 13027014 11912902 11384245 9211020 5395034 3223865 9737372 13031126 11384245 11910589 12437190 12437190 2168865 10855853 15728639 12437190 13029070 12437190 13029070 2695465 10855853 15202295 12437190 12434877 11382197 8686732 5921370 3750210 9737372 13031126 10857901 11384245 11910589 12437190 15202295 15200239 12437190 12437190 12437190 12437190 12437190 14608359 14610415 15202295 11910589 11910589 10857901 9211028 5921370 3750210 9737372 13029070 10857901 11382189 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 10857901 10266021 8684684 5921379 3750210 9737372 12439246 9737364 9213084 9737364 9211028 9211020 9211028 9211020 8684684 9211020 9211020 8684684 9211028 9211020 8684684 9211020 9211020 8684684 8684676 5921379 4342338 10263708 9211028 6513515 6513507 5921379 5921379 5921370 5395034 5395034 5395034 5395034 5395034 5395034 5395034 5395034 5921370 5395034 5921379 5921379 5921379 5921379 4342346 7568260 5395034 4342346 4342346 3750210 3750210 3750201 3750210 3750201 3750201 3750201 3750201 3750201 3750201 3223865 3750210 3750201 3750210 3750210 4342338 4342346 4868690)		offset: 0 @ 0! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!noShuffleButtonForm	^Form 		extent: 77 @ 14		depth: 32		fromArray: #(10988716 11515831 11779003 11646905 11119537 10855853 10855853 10658472 10395296 10132124 9868956 9737372 9737372 9605786 9342614 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 8684684 8684684 8684684 8684684 8816782 9080978 9212562 9211534 9803157 10067619 10660015 12566979 14342874 15921906 16514043 15987699 15724527 15724527 15592941 15329769 15000804 14737632 14606046 14606046 14606046 14606046 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 14211288 14211288 14474460 14606046 14606046 14474460 13553358 13553358 13553358 13553358 13421772 13158600 10987433 6908271 7303028 10067619 10265771 11318455 12831177 14738146 14474462 12040125 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10266021 10263708 9739429 10263708 9739420 10265250 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10266021 10263708 9739429 9607834 9344662 9212562 9211534 9343120 9607320 8357255 5658718 7039855 9804190 9739426 10792110 12436419 14606560 14474974 12041661 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10855845 11384245 10857901 10857901 10855845 11252659 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10855845 11384245 10857901 10659237 10397093 10002592 9476248 9475734 10001050 8750469 5789784 7039851 9475481 9344154 10658982 12434877 14606046 14343388 11581367 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 3750210 3750210 3750210 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 10397607 10133664 9869464 9737366 9737370 8355717 5658200 7039851 9474197 9079956 9870500 11449787 13948632 13948630 11449781 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 3750210 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 10529193 10002592 9476248 9344150 9606298 8224133 5197656 6710891 9146517 8621202 9673886 11318195 13488079 13488079 11318195 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 3750210 11711154 3750210 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 10529193 10002592 9476248 9343636 9604756 8222591 5197142 6710891 9146512 8489610 9279126 10923180 13356493 13488079 11318195 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 3750210 11711154 11711154 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 11711154 11711154 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 3750210 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 10397607 10002080 9474712 9211028 9211028 7829375 5066070 6710891 9146512 8489610 9279126 10791596 12961741 13092813 11184812 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 3750210 3750210 3750210 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 3750210 11711154 11711154 3750210 11711154 11711154 3750210 3750210 11711154 11711154 3750210 11711154 11711154 11711154 3750210 11711154 11711154 11711154 3750210 3750210 3750210 11711154 3750210 3750210 3750210 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 10264222 10001050 9475734 9213076 9213076 7830909 5066575 6710886 8817552 8094602 9147286 10791594 12961735 12961735 10791594 10266021 10266021 10263708 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10263708 10266021 10266021 10266021 10263708 10266021 10263708 10266021 10266021 10266021 10263708 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10263708 10266021 10266021 10266021 10263708 10001052 9475740 9081496 8818320 8949390 9474706 8355711 5658198 7039851 9145232 8619404 9673372 11055023 12698563 12303805 9870492 9213076 8686732 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 8686740 9211020 9213076 9211020 8686740 9211020 9213076 8686732 9213076 9211020 8686740 9211020 8686740 9211534 9213076 8686732 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 8686740 9211020 9213076 9211020 8686740 9211020 9213076 8686732 9213076 9211020 8686740 8686738 8686734 8686218 8685190 8947850 9474198 8355717 5658200 7039851 9146517 8883860 10527396 11250605 10987437 10264228 9212564 8686218 8685190 8488068 8225924 8094081 8093053 7961467 7699323 7568251 7568251 7568251 7568251 7568251 7568251 7699323 7961467 7961467 7699323 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7699323 7961467 7961467 7699323 7568251 8094852 8094852 8094852 8094852 7830911 7303543 6579820 5791328 7633016 10067614 9015185 7698301 5921890 3751745 2699057 2698033 2698033 2699057 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699055 2698027 2697513 2697513 2698027 2699055 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699055 2698027 2697513 2697513 2698027 2699569 2699569 2831155 3094327 3488573 4013893 3882307 3093815 6120034 5855577 1842204 1315860 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 5197647)		offset: 0 @ 0! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!pauseButtonForm	^Form 		extent: 22 @ 18		depth: 32		fromArray: #(11382197 11908541 11908541 11908541 11382197 10855853 10263717 10263717 10263717 10263708 10263717 10263708 10263717 10263708 10263708 9737372 9737372 9737372 9737372 9737364 9737372 7568260 11908541 15728639 15728639 15202295 14610415 14084071 14081758 13557470 13557470 13557470 13557470 13557470 13557470 13557470 13557470 13555414 13031126 13031126 12439246 12439246 9211028 4868690 11382197 15726583 13029070 12437190 12434877 11910589 11910589 11910589 11908533 11384245 11908541 11908533 11908533 11384245 11908541 11384245 11384245 11382189 10857901 9211028 7041907 4342346 11382197 14610415 12437190 12437190 12437190 12437190 12437190 12434877 12437190 12437190 11910589 12437190 11912902 12437190 11910589 12437190 11910589 11910589 11382197 9737364 5921379 4342346 10855853 14608359 11910589 12434877 12437190 1050640 1050640 1576984 2695465 12437190 13029070 12437190 1050640 1050640 1576984 2171169 13027014 11912902 11384245 9211028 5921379 3750210 10266021 14081758 11910589 11912902 12437190 1576984 9213084 10263717 15202295 13029070 13029070 13029070 1576984 9213084 10263717 15202295 12437190 12437190 11384245 9211028 5921370 3750210 10263717 13557470 11908533 11910589 13029070 1050640 10263717 10855853 15728639 13029070 13029070 13029070 1050640 10263717 10855853 15728639 13027014 12437190 11384245 9211028 5395034 3750201 10263708 13557470 11384245 12434877 12437190 1050640 10263717 10855853 15728639 13029070 13029070 13029070 1576984 10263717 10855853 15728639 12439246 12437190 11384245 9211028 5921370 3750201 10263717 13555414 11384245 11910589 12437190 1576984 10263717 10855853 15728639 13029070 13029070 13029070 1050640 10263717 10855853 15728639 13027014 12437190 11384245 9211020 5395034 3223865 10263717 13555414 11384245 11910589 12437190 1576984 10263717 10855853 15728639 13029070 13029070 13029070 1576984 10263717 10855853 15728639 12437190 12437190 11384245 9211020 5395034 3750201 9739420 13555414 11384245 11910589 13027014 1050640 10263717 10855853 15728639 13029070 13029070 13555414 1050640 10263717 10855853 15728639 13029070 12434877 11384245 9211028 5921370 3223865 9737372 13031126 11384245 11910589 12437190 1576984 10263717 10855853 15728639 13029070 13029070 13029070 1050640 10263717 10855853 15728639 13027014 11912902 11384245 9211028 5395034 3750210 9739420 13031126 11384245 11910589 12437190 2168865 10263717 10263717 15728639 12437190 13027014 13029070 2695465 10263717 10263717 15726583 12437190 11910589 11382189 9211020 5921370 3750201 9737372 13031126 10857901 11384245 12434877 14610415 14610415 15202295 14610415 12437190 12437190 12437190 14608359 15202295 14610415 15202295 11910589 11910589 10857901 8686740 5921370 3750210 9737372 13029070 10857901 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 10857901 10855845 8684684 5921379 4342338 9737372 12439246 9213076 9211028 9211028 9211028 9211020 9211028 9211020 8684684 9211020 9211020 8684684 9211020 9211020 8684684 9211020 9211020 8684684 8684676 5921379 4342338 10263708 9211028 7041915 6513515 5921379 5921379 5921370 5395034 5395034 5395034 5395034 5395034 5395034 5395034 5395034 5921370 5395034 5921379 5921379 5921379 5921379 4342346 8092548 5395034 4342346 4342338 4342338 3750210 3750201 3750210 3750201 3750201 3750201 3750201 3750201 3750201 3223865 3750210 3750201 3750210 3750210 4342338 4342346 4868690)		offset: 0 @ 0! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!playButtonForm	^Form 		extent: 22 @ 18		depth: 32		fromArray: #(11382197 11908541 11908541 11908541 11382197 10855853 10263717 10263717 10263717 10263708 10263717 10263708 10263717 10263708 10263708 9737372 9737372 9737372 9737372 9737364 9737372 7039859 11908541 15202295 15202295 14610415 14084071 14081758 13557470 13555414 13031126 13031126 13031126 13031126 13031126 13031126 13031126 13031126 13029070 12439246 12437190 11912902 9211028 4342338 11384245 15200239 13029070 12437190 12434877 11910589 11910589 11910589 11384245 11908541 11908533 11908541 11908533 11908541 11908533 11384245 11384245 11384245 10857901 9211028 5921379 3750210 11382197 14608359 12437190 12437190 12437190 12437190 12437190 12434877 12437190 11912902 12434877 11912902 12434877 11912902 11910589 12437190 11910589 11908533 11384245 9211028 5921370 3750210 10855853 14081758 11910589 12434877 12437190 12437190 526344 1576984 12437190 13027014 12439246 13027014 12439246 13027014 12437190 13027014 12437190 11912902 11384245 9211028 5395034 3750201 10266021 13557470 11910589 11912902 12437190 13029070 526344 8684684 526344 1576984 13029070 13029070 13029070 13029070 13029070 13029070 12437190 12437190 11384245 9211028 5395034 3223865 10263717 13555414 11384245 12434877 12437190 13029070 1052688 9213084 9213084 8684684 526344 1050640 13029070 13029070 13029070 13029070 13027014 12437190 11384245 9211028 5395026 3223865 10263717 13031126 11908533 11910589 12437190 13029070 526344 9213084 9213084 9213084 9213084 8684684 526344 1050640 13029070 13029070 12439246 12437190 11384245 9211028 5395026 3223865 10263717 13029070 11384245 11910589 12437190 13029070 526344 9213084 9213084 9213084 9213084 9213084 9213084 8684684 1050640 1050640 13029070 12434877 11384245 9211020 4868690 3223865 10263708 13031126 11384245 11910589 12437190 13029070 1052688 9213084 9213084 9213084 9213084 9213084 10263717 10263717 15202295 14610415 13029070 12437190 11384245 9211028 5395026 3223865 9737372 13031126 11384245 11910589 12437190 13029070 526344 9213084 9213084 9213084 10263717 10263717 15202295 15202295 13029070 13029070 12439246 12434877 11384245 9211028 5395034 3223857 9739420 13029070 11384245 11910589 12437190 13029070 1052688 9213084 10263717 10263717 15202295 15202295 13029070 13029070 13029070 13029070 13027014 11912902 11384245 9211028 5395026 3223865 9737372 13029070 11384245 11910589 12437190 12437190 1050640 10263717 15202295 14610415 13029070 12437190 13029070 12437190 12437190 12437190 12437190 12434877 11382189 8686732 5395034 3223865 9737372 12439246 10857901 11384245 11910589 12437190 14084071 14608359 12437190 12437190 12437190 12437190 12437190 12437190 12437190 12437190 11910589 11910589 10857901 9211028 5395034 3223865 9737372 12437190 10857901 11382189 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 10857901 10266021 8684684 5395034 3750201 9737372 11912902 9737364 9213084 9737364 9211028 9211020 9211028 9211020 8684684 9211020 9211020 8684684 9211020 9211020 8684684 9211028 9211020 8684684 8684676 5395034 3750210 9737372 9737364 5921379 5921379 5395034 5395034 5395034 5395026 4868690 5395034 4868690 5395034 5395026 4868690 5395034 5395026 5395034 5395034 5395034 5395034 5921379 3750210 7566203 4342346 4342338 3750210 3750201 3750201 3223865 3223865 3223865 3223865 3223865 3223865 3223865 3223865 3223865 3223865 3223857 3223865 3750201 3750210 3750210 3750210)		offset: 0 @ 0! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!playlist: aSqueakAmpPlaylist 	playlist ifNotNil: [playlist stateMachine stopSelected].	playlist := aSqueakAmpPlaylist.	self updateDisplay.	self updateShuffleAndRepeatButtons! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!previousButtonForm	^Form 		extent: 22 @ 18		depth: 32		fromArray: #(11382197 11908541 11908541 11908541 11382197 10855853 10263717 10263717 10263717 10263708 10263717 10263708 10263717 10263708 10263708 9737372 9737372 9737372 9737372 9737364 9737372 7568260 11908541 15728639 15728639 15202295 14610415 14084071 14081758 13557470 13557470 13557470 13557470 13557470 13557470 13557470 13557470 13555414 13031126 13031126 12439246 12439246 9211028 4868690 11382197 15726583 13029070 12437190 12434877 11910589 11910589 11910589 11908533 11384245 11908541 11908533 11908533 11384245 11908541 11384245 11384245 11382189 10857901 9211028 7041907 4342346 11382197 14610415 12437190 12437190 12437190 12437190 12437190 12434877 12437190 12437190 11910589 12437190 11912902 12437190 11910589 12437190 11910589 11910589 11382197 9737364 5921379 4342338 10855853 14608359 11910589 12434877 12437190 12437190 1050640 1576984 2168865 13029070 13027014 12437190 13027014 12437190 2171169 2171169 13027014 11912902 11384245 9211028 5921379 3750210 10266021 14081758 11910589 11912902 12437190 13029070 1050640 10263717 15202295 13029070 13029070 13029070 13029070 2695465 10263717 15202295 12437190 12437190 11384245 9211028 5921370 3750210 10263717 13557470 11384245 12434877 12437190 13029070 1576984 10263717 15728639 13029070 13029070 13029070 2168865 9213084 10855853 15728639 13027014 12437190 11384245 9211028 5921370 3750210 10263708 13557470 11908533 11910589 12437190 13029070 1050640 10263717 15728639 13029070 13029070 2695465 9213084 10263717 10855853 15728639 12439246 12437190 11384245 9211028 5395034 3750201 10263717 13555414 11384245 11910589 12437190 13029070 1050640 10263717 15728639 11908541 3223857 9213084 10263717 10263717 10855853 15728639 13027014 12437190 11384245 9211020 5395034 3750201 10263717 13555414 11384245 12434877 12437190 13029070 1576984 10263717 15728639 13029070 15202295 10855853 10263717 10263717 10855853 15728639 12437190 12437190 11384245 9211020 5395034 3750201 9739420 13555414 11384245 11910589 12437190 13029070 1050640 10263717 15728639 13029070 13029070 15728639 10855853 10263717 10855853 15728639 13029070 12434877 11384245 9211028 5921370 3223865 9737372 13031126 11384245 11910589 12437190 13029070 1050640 10263717 15728639 13029070 13029070 13029070 15728639 10855853 10855853 15728639 12437190 11912902 11384245 9211028 5395034 3750210 9737372 13031126 11384245 11910589 12437190 12437190 2695465 10855853 15202295 12437190 13027014 12437190 13027014 15202295 11382197 15726583 12437190 12434877 11382189 8686732 5921370 3750201 9737372 13031126 10857901 11384245 11910589 12437190 14608359 15202295 15200239 12437190 12437190 12437190 12437190 12437190 15202295 14610415 12437190 11910589 10857901 9211028 5921370 3750210 9737372 13029070 10857901 11382189 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 10857901 10266021 8684684 5921379 3750210 9737372 12439246 9737364 9211028 9737364 9211028 9211028 9211020 8686740 9211020 8684684 9211020 9211020 8684684 9211020 9211020 8684684 9211020 8684684 8684676 5921379 4342338 9737372 9737364 7041915 6513515 5921379 5921379 5921370 5395034 5395034 5395034 5921370 5395034 5395034 5395034 5395034 5395034 5921370 5921379 5921379 5921379 5921379 4342346 8092548 4868690 4342346 4342338 3750210 3750210 3750201 3750210 3750201 3750201 3223865 3750201 3750201 3750201 3750201 3750210 3750201 3750210 3750210 4342338 4342346 4868690)		offset: 0 @ 0! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!repeatButtonClicked	playlist useRepeat: playlist usesRepeat not.	self updateShuffleAndRepeatButtons! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!repeatButtonForm	^Form 		extent: 27 @ 14		depth: 32		fromArray: #(11384245 11910589 10855853 10855853 10263708 9737372 9737372 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211020 9211028 8684684 8684684 8684684 8684684 9213076 9211020 5921379 9739429 13553358 16777215 15724527 15724527 15198183 14606046 14606046 14606046 14606046 14079702 14606046 14606046 14079702 14606046 14606046 14079702 14606046 14079702 14079702 14079702 14079702 13553358 13027014 13027014 4868690 1052688 9739429 11910589 16250871 11384245 10855845 10266021 10266021 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 9739429 10263708 9739420 9213076 9211020 9739420 4342346 1052688 9213084 11384245 15724527 10855845 5921379 5397082 5397082 5397082 9213084 11382197 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10855845 10855845 10266021 9213076 10263708 4342338 1052688 9211028 10855845 15724527 10855845 5921379 1071616 1071616 1071616 13553366 11910589 11384245 11910589 6515563 1052688 1052688 7041907 11384245 11910589 11384245 11384245 11384245 11384245 10266021 9213076 9737372 4342338 1052688 8686740 10266021 15198183 10266021 5921379 1071616 1071616 549632 13553366 11910589 11910589 7041907 2171169 11910589 11910589 1052688 11910589 11910589 11910589 11910589 11384245 11384245 10266021 9213076 9737364 3750210 1052688 8094860 10266021 15198183 10266021 9213084 13553366 14079710 14079710 14079710 11910589 11910589 2171169 2171169 11910589 11910589 11910589 1052688 11910589 11910589 11910589 11384245 11384245 10266021 9213076 9735316 3750210 1052688 8094860 9739420 14606046 10266021 11384245 11384245 11910589 11384245 11910589 11384245 11910589 11384245 11910589 11384245 2171169 6515563 1052688 11910589 11384245 11910589 11384245 11384245 10266021 9211020 9211028 3750210 1052688 8094852 9739420 14079702 10266021 10855845 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 2171169 1052688 6515563 11384245 11382189 10857901 11384245 10266021 10263708 8686740 9737364 3750210 1052688 8092548 9739420 14079702 9737364 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 1052688 2171169 1579032 10266021 10266021 10266021 10266021 10263708 9213084 8686732 9737364 4342338 1052688 8094852 10266021 13553358 8686732 9737364 9213076 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 8686732 9211020 8686740 9211020 9213076 8686732 9213076 8686732 9211020 8094852 9737372 4342338 1052688 8094860 11382189 10855853 8094852 8684684 8094852 8092539 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 8092539 7568251 7568251 7568251 8092539 7568251 8094852 8094852 8094852 7039859 5397082 2171169 9739420 7039859 3225913 3225913 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2697513 2697513 2699569 2699569 2699569 2699569 2699569 2699569 3225913 4342346 2699569 2171169 2171169 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 2171169)		offset: 0 @ 0! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!repeatEnabledButtonForm	^Form 		extent: 27 @ 14		depth: 32		fromArray: #(11384245 11910589 10855853 10855853 10263708 9737372 9737372 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211028 9211020 9211028 8684684 8684684 8684684 9211020 8684684 4868690 9739429 13553358 16777215 15724527 15724527 15198183 14606046 14606046 14606046 14606046 14079702 14606046 14606046 14079702 14606046 14606046 14079702 14606046 14079702 14606046 14079702 14079702 13553358 13553358 13553358 4868690 1052688 9739429 11910589 16250871 11384245 10855845 10266021 10266021 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10263708 10266021 10266021 10266021 10263708 9739429 10263708 9739420 9213076 10266021 4342346 526344 9213084 11384245 15724527 10855845 5921379 5397082 5397082 5397082 9213084 11382197 10857901 11384245 10857901 11384245 10857901 11384245 10857901 11384245 10855845 11384245 10857901 10857901 10855845 10266021 11382197 4342338 1052688 9211028 10855845 15724527 10855845 5921379 585472 585472 585472 13553366 11910589 11384245 11910589 6515563 1052688 1052688 7041907 11384245 11910589 11384245 11910589 11384245 11384245 11384245 10266021 10855845 4342338 526344 8686740 10266021 15198183 10266021 5921379 585472 587520 587520 14079710 11910589 11910589 7039851 2173225 11910589 11910589 1052688 11910589 11910589 11910589 11910589 11910589 11384245 11384245 10266021 10855853 4342338 526344 8094860 10266021 15198183 10266021 9213084 13553366 14079710 14079710 14079710 11910589 11910589 2171169 2171169 11910589 11910589 11910589 1052688 11910589 11910589 11910589 11910589 11384245 11384245 10266021 10855853 4342338 526344 8094860 9739420 14606046 10266021 11384245 11908533 11910589 11908533 11910589 11384245 11910589 11384245 11910589 11384245 2171169 6515563 1052688 11910589 11384245 11910589 11384245 11384245 11384245 10266021 10855853 3750210 1052688 8094852 9739420 14079702 10266021 10855845 11384245 11384245 10857901 11384245 11384245 11384245 11384245 11384245 11384245 2171169 1052688 6515563 11384245 11384245 11382189 10857901 11384245 10266021 10263708 10855853 3750210 526344 8092548 9739420 14079702 9737364 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 10266021 1052688 2171169 1579032 10266021 10266021 10266021 10266021 10266021 10263708 9213084 10263708 4342338 526344 8094852 10266021 13553358 8686732 9737364 9213076 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 8686732 9211020 8686740 9211020 9213076 9211020 9213076 8686732 9213076 8686732 10263708 4342338 526344 8094860 11382189 10855853 8094852 8684684 8094852 8092539 7568251 7568251 7568251 7568251 7568251 7568251 7568251 7568251 8092539 7568251 7568251 7568251 7568251 7568251 8092539 8094852 8092539 6515571 5397082 1052688 9739420 7039859 3225913 3225913 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 4342346 2699569 1579032 2171169 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 2171169)		offset: 0 @ 0! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!shuffleButtonClicked	playlist usesNoShuffle 		ifTrue: [playlist useFileShuffle]		ifFalse: 			[playlist usesFileShuffle 				ifTrue: [playlist useFolderShuffle]				ifFalse: [playlist useNoShuffle]].	self updateShuffleAndRepeatButtons! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!sliderMorph	| r |	r := (AlignmentMorph newRow)				color: Color transparent;				inset: 0;				centering: #center;				hResizing: #shrinkWrap;				vResizing: #rigid;				height: 15.	r addMorphBack: (sliderMorph := (SimpleSliderMorph new)						extent: 300 @ 2;						setMaxVal: 1.0;						setMinVal: 0.0;						target: self;						actionSelector: #percentageSelected:;						yourself).	^r! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!step	self updateDisplay! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!stepTime	^500! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!stopButtonForm	^Form 		extent: 22 @ 18		depth: 32		fromArray: #(11382197 11908541 11908541 11908541 11382197 10855853 10263717 10263717 10263717 10263708 10263717 10263708 10263717 10263708 10263708 9737372 9737372 9737372 9737372 9737364 9737372 7568260 11908541 15728639 15728639 15202295 14610415 14084071 14081758 13557470 13557470 13557470 13557470 13557470 13557470 13557470 13557470 13555414 13031126 13031126 12439246 12439246 9211028 4868690 11382197 15726583 13029070 12437190 12434877 11910589 11910589 11910589 11908533 11384245 11908541 11908533 11908533 11384245 11908541 11384245 11384245 11382189 10857901 9211028 7041907 4342346 11382197 14610415 12437190 12437190 12437190 12437190 12437190 12434877 12437190 12437190 11910589 12437190 11912902 12437190 11910589 12437190 11910589 11910589 11382197 9737364 5921379 4342346 10855853 14608359 11910589 12434877 12437190 12437190 1050640 1576984 1050640 1050640 1576984 1050640 1050640 1052688 1576984 2171169 13027014 11912902 11384245 9211028 5921379 3750210 10855845 14081758 11910589 11912902 12437190 13029070 1050640 10263717 10263717 10263717 10263717 10263717 10263717 10263717 10263717 15202295 12437190 12437190 11384245 9211028 5921370 3750210 10263717 13557470 11384245 12434877 12437190 13029070 1576984 10263717 10263717 10263717 10263717 10263717 10263717 10263717 10855853 15728639 13027014 12437190 11384245 9211028 5395034 3750201 10263717 13557470 11908533 11910589 12437190 13029070 1050640 10263717 10263717 10263717 10263717 10263717 10263717 10263717 10855853 15728639 12439246 12437190 11384245 9211028 5921370 3750201 10263717 13555414 11384245 11910589 12437190 13029070 1050640 10263717 10263717 10263717 10263717 10263717 10263717 10263717 10855853 15728639 13027014 12437190 11384245 9211020 5395034 3223865 10263717 13555414 11384245 12434877 12437190 13029070 1576984 10263717 10263717 10263717 10263717 10263717 10263717 10263717 10855853 15728639 12437190 12437190 11384245 9211020 5395034 3750201 9739420 13555414 11384245 11910589 12437190 13029070 1050640 10263717 10263717 10263717 10263717 10263717 10263717 10263717 10855853 15728639 13029070 12434877 11384245 9211028 5921370 3223865 9737372 13031126 11384245 11910589 12437190 13029070 1050640 10263717 10263717 10263717 10263717 10263717 10263717 10263717 10855845 15728639 12437190 11912902 11384245 9211028 5395034 3750210 9737372 13031126 11384245 11910589 12437190 12437190 2695465 10855853 10263717 10855845 10266029 10855845 10263717 10855853 10266029 15726583 12437190 12434877 11382189 8686732 5921370 3750201 9737372 13031126 10857901 11384245 11910589 12437190 14608359 15202295 14610415 15202295 15200239 14610415 15202295 14610415 15200239 14610415 12437190 11910589 10857901 9211028 5921370 3750210 9737372 13029070 10857901 11382189 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 10857901 10266021 8684684 5921379 4342338 9737372 12439246 9737364 9211028 9737364 9211028 9211028 9211020 9211020 9211028 8684684 9211028 9211020 8684684 9211028 9211020 8684684 9211020 8684684 8684676 5921379 4342338 10263708 9211028 7041915 6513515 5921379 5921379 5921370 5395034 5395034 5395034 5395034 5395034 5395034 5395034 5395034 5395034 5921370 5921379 5921379 5921379 5921379 4342346 7568260 5395034 4342346 4342338 3750210 3750210 3750201 3750210 3750201 3750201 3750201 3750201 3750201 3750201 3750201 3750210 3750201 3750210 3750210 4342338 4342346 4868690)		offset: 0 @ 0! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!tinyButtonForm	^Form 		extent: 18 @ 14		depth: 32		fromArray: #(11384245 11910589 10855853 10855853 10263708 9737372 9737372 9211028 9211028 9211028 9211028 9211028 9211028 9211028 8684684 9213076 9211020 5921379 9739429 13553358 16777215 15724527 15724527 15198183 14606046 14606046 14606046 14606046 14079702 14606046 14606046 14079702 13027014 13027014 4868690 1052688 9739429 11910589 16250871 11384245 10855845 10266021 10266021 10266021 10266021 10263708 10266021 10266021 10263708 10266021 9211020 9739420 4342346 1052688 9213084 11384245 15724527 10855845 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 10263708 4342338 1052688 9211028 10855845 15724527 10855845 11711154 11711154 11711154 11711154 11711154 3750210 11711154 11711154 11711154 11711154 11711154 9737372 4342338 1052688 8686740 10266021 15198183 10266021 11711154 11711154 11711154 11711154 3750210 3750210 3750210 11711154 11711154 11711154 11711154 9737364 3750210 1052688 8094860 10266021 15198183 10266021 11711154 11711154 11711154 3750210 3750210 3750210 3750210 3750210 11711154 11711154 11711154 9735316 3750210 1052688 8094860 9739420 14606046 10266021 11711154 11711154 3750210 3750210 3750210 3750210 3750210 3750210 3750210 11711154 11711154 9211028 3750210 1052688 8094852 9739420 14079702 10266021 11711154 3750210 3750210 3750210 3750210 3750210 3750210 3750210 3750210 3750210 11711154 9737364 3750210 1052688 8092548 9739420 14079702 9737364 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 9737364 4342338 1052688 8094852 10266021 13553358 8686732 9737364 9213076 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 8094852 9737372 4342338 1052688 8094860 11382189 10855853 8094852 8684684 8094852 8092539 7568251 7568251 7568251 7568251 7568251 7568251 7568251 8094852 7039859 5397082 2171169 9739420 7039859 3225913 3225913 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 3225913 4342346 2699569 2171169 2171169 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 2171169)		offset: 0 @ 0! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!updateDisplay	elapsedLedMorph string: playlist currentFileElapsedTimeString.	totalTimeLedMorph string: playlist currentFileTotalTimeString.	trackNameMorph contents: playlist currentFileTrackTitle.	sliderMorph adjustToValue: playlist currentFileElapsedPercentage! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!updateShuffleAndRepeatButtons	| repeatButtonForm shuffleButtonForm |	repeatButtonForm := playlist usesRepeat 				ifTrue: [self repeatEnabledButtonForm]				ifFalse: [self repeatButtonForm].	playlist usesNoShuffle 		ifTrue: [shuffleButtonForm := self noShuffleButtonForm].	playlist usesFileShuffle 		ifTrue: [shuffleButtonForm := self fileShuffleButtonForm].	playlist usesFolderShuffle 		ifTrue: [shuffleButtonForm := self folderShuffleButtonForm].	repeatButtonMorph labelGraphic: repeatButtonForm.	shuffleButtonMorph labelGraphic: shuffleButtonForm! !!SqueakAmpPlayerMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!wantsSteps	^true! !!SqueakAmpPlayerMorph methodsFor: 'event handling' stamp: 'bh 12/21/2000 02:00'!nextButtonClicked	playlist stateMachine nextSelected! !!SqueakAmpPlayerMorph methodsFor: 'event handling' stamp: 'bh 12/21/2000 02:00'!pauseButtonClicked	playlist stateMachine pauseSelected! !!SqueakAmpPlayerMorph methodsFor: 'event handling' stamp: 'bh 12/21/2000 02:00'!percentageSelected: aNumber 	playlist stateMachine percentageSelected: aNumber! !!SqueakAmpPlayerMorph methodsFor: 'event handling' stamp: 'bh 12/21/2000 02:00'!playButtonClicked	playlist stateMachine playSelected	"	(self confirm:'If you start playing the playlist,\you will not be able to stop it,\and must abort the image.\\Are you sure you want to do this?' withCRs)	ifTrue:		[		[		| foo file form pathName|		(self confirm:'Use folder shuffle?')		ifTrue: [playlist useFolderShuffle]		ifFalse:			[(self confirm:'Use file shuffle?')				ifTrue: [playlist useFileShuffle]				ifFalse: [playlist useNoShuffle] ].		form _ Form extent: 320@240 depth: 16.		[(file _ playlist nextFile) notNil] whileTrue:			[			foo _ MPEGPlayer playFile: file pathName onForm: form.			foo playAudioStreamWaitTilDone: 0.			].		]fork.		]."! !!SqueakAmpPlayerMorph methodsFor: 'event handling' stamp: 'bh 12/21/2000 02:00'!previousButtonClicked	playlist stateMachine previousSelected! !!SqueakAmpPlayerMorph methodsFor: 'event handling' stamp: 'bh 12/21/2000 02:00'!stopButtonClicked	playlist stateMachine stopSelected! !!SqueakAmpPlayerMorph methodsFor: 'event handling' stamp: 'bh 12/21/2000 02:00'!tinyButtonClicked	| owningWindow position |	owningWindow := self ownerChain 				detect: [:own | own isKindOf: SystemWindow]				ifNone: [nil].	owningWindow ifNotNil: 			[position := owningWindow position.			owningWindow delete]		ifNil: 			[position := self position.			self delete].	(SqueakAmpTinyMorph forPlaylist: playlist)		openInWorld;		position: position! !!SqueakAmpPlayerMorph class methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!forPlaylist: aSqueakAmpPlaylist 	^self new initializeForPlaylist: aSqueakAmpPlaylist! !!SqueakAmpPlaylistMorph methodsFor: 'potentially dangerous hacks' stamp: 'bh 12/21/2000 02:00'!hResizing	^#spaceFill! !!SqueakAmpPlaylistMorph methodsFor: 'potentially dangerous hacks' stamp: 'bh 12/21/2000 02:00'!isAlignmentMorph	^true! !!SqueakAmpPlaylistMorph methodsFor: 'potentially dangerous hacks' stamp: 'bh 12/21/2000 02:00'!layoutInWidth: w height: h 	self extent: w @ h! !!SqueakAmpPlaylistMorph methodsFor: 'potentially dangerous hacks' stamp: 'bh 12/21/2000 02:00'!minHeight	^200! !!SqueakAmpPlaylistMorph methodsFor: 'potentially dangerous hacks' stamp: 'bh 12/21/2000 02:00'!minWidth	^200! !!SqueakAmpPlaylistMorph methodsFor: 'potentially dangerous hacks' stamp: 'bh 12/21/2000 02:00'!vResizing	^#spaceFill! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addSubmorphsAfter: parentMorph fromCollection: aCollection allowSorting: sortBoolean 	| priorMorph morphList newCollection |	priorMorph := nil.	newCollection := (sortBoolean and: [sortingSelector notNil]) 				ifTrue: 					[(aCollection asSortedCollection: 							[:a :b | 							(a perform: sortingSelector) <= (b perform: sortingSelector)]) 						asOrderedCollection]				ifFalse: [aCollection].	morphList := OrderedCollection new.	newCollection do: 			[:item | 			priorMorph := IconicIndentingListItemMorph basicNew 						initWithContents: item						prior: priorMorph						forList: self.			priorMorph color: self textColor.			morphList add: priorMorph].	scroller addAllMorphs: morphList after: parentMorph.	^morphList! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!anyExpandedMorph	^scroller submorphs detect: [:morph | morph isExpanded] ifNone: [nil]! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!backgroundColor	^Color black! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!collapseAll	| morph |	[(morph := self anyExpandedMorph) notNil] whileTrue: 			[morph toggleExpandedState.			self installEventHandlerOn: morph children.			self adjustSubmorphPositions]! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!emptyPlaylist	^SqueakAmpPlaylist new! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!expandItem: anObject 	| morph |	(morph := self morphForItem: anObject) ifNotNil: 			[morph toggleExpandedState.			self installEventHandlerOn: morph children.			self adjustSubmorphPositions]! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!expandedForm	^expandedForm ifNil: 			[expandedForm := Form 						extent: 10 @ 10						depth: 8						fromArray: #(0 0 0 0 0 0 0 0 0 460551 117901063 117899264 1799 117901063 117440512 7 117901063 0 0 117901056 0 0 458752 0 0 0 0 0 0 0)						offset: 0 @ 0.			expandedForm replaceColor: Color black withColor: color.			expandedForm]! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!genericMenu: aMenu 	^aMenu! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!getCurrentSelection	^currentSelection! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!getList	^playlist rootDiskObjects 		collect: [:diskObject | PlaylistWrapper with: diskObject model: self]! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!getMenu: shiftKeyState 	^menu ifNil: [super getMenu: shiftKeyState]! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!getMenuSelector: aSymbol 	getMenuSelector := aSymbol! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!iconForm	^iconForm ifNil: 			[iconForm := Form 						extent: 10 @ 10						depth: 8						fromArray: #(0 1792 0 0 1799 117440512 0 1792 117899264 0 1792 458752 0 1792 0 1799 117442304 0 460551 117901056 0 117901063 117901056 0 460551 117899264 0 1799 117440512 0)						offset: 0 @ 0.			iconForm replaceColor: Color black withColor: color.			iconForm]! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!initialize	super initialize.	playlist := self emptyPlaylist.	self model: self.	getListSelector := #getList.	getSelectionSelector := #getCurrentSelection.	setSelectionSelector := #noteNewSelection:.	getMenuSelector := #genericMenu:.	keystrokeActionSelector := nil.	self list: self getList.	self color: self backgroundColor.	self borderWidth: 1.	self borderColor: Color gray! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!insertNewMorphs: morphList 	super insertNewMorphs: morphList.	morphList do: [:morph | morph color: self textColor]! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!menu: aMenuMorph 	menu := aMenuMorph! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!morphForItem: anObject 	^scroller submorphs detect: [:each | each complexContents item = anObject]		ifNone: [nil]! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!morphsFromCollection: aCollection allowSorting: sortBoolean withExpandedItems: expandedItems 	| priorMorph morphList newCollection |	priorMorph := nil.	newCollection := (sortBoolean and: [sortingSelector notNil]) 				ifTrue: 					[(aCollection asSortedCollection: 							[:a :b | 							(a perform: sortingSelector) <= (b perform: sortingSelector)]) 						asOrderedCollection]				ifFalse: [aCollection].	morphList := OrderedCollection new.	newCollection do: 			[:item | 			priorMorph := IconicIndentingListItemMorph basicNew 						initWithContents: item						prior: priorMorph						forList: self.			morphList add: priorMorph.			(item hasEquivalentIn: expandedItems) 				ifTrue: 					[priorMorph isExpanded: true.					priorMorph 						addChildrenForList: self						addingTo: morphList						withExpandedItems: expandedItems]].	^morphList! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!notExpandedForm	^notExpandedForm ifNil: 			[notExpandedForm := Form 						extent: 10 @ 10						depth: 8						fromArray: #(0 0 0 7 0 0 7 117440512 0 7 117899264 0 7 117901056 0 7 117901063 0 7 117901056 0 7 117899264 0 7 117440512 0 7 0 0)						offset: 0 @ 0.			notExpandedForm replaceColor: Color black withColor: color.			notExpandedForm]! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!noteNewSelection: x 	currentSelection := x.	self changed: #getCurrentSelection.	currentSelection ifNil: [^self].	currentSelection sendSettingMessageTo: self! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!playlist: aSqueakAmpPlaylist 	playlist := aSqueakAmpPlaylist.	self changed: #getList! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!rootMorphs	^{ 		scroller submorphs first}! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!selection	^self selectedMorph notNil 		ifTrue: [self selectedMorph complexContents item]		ifFalse: [nil]! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!textColor	^Color cyan! !!SqueakAmpPlaylistMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!unhighlightSelection	selectedMorph ifNotNil: 			[selectedMorph				color: self textColor;				changed]! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addCloseButtonMorph	| button |	self addMorph: (button := (SimpleButtonMorph new)						borderWidth: 0;						label: 'X' font: Preferences standardButtonFont;						color: Color transparent;						actionSelector: #closeButtonClicked;						target: self;						extent: 14 @ 14;						yourself).	button labelMorph color: Color cyan! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addLEDMorph	self addMorphBack: (elapsedLedMorph := (LedMorph new)						color: Color cyan;						highlighted: true;						chars: 6;						extent: 12 @ 15;						string: '00:00';						yourself)! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addPlayPauseButtonMorph	self addMorphBack: (playPauseButtonMorph := self 						buttonName: ''						action: #playPauseButtonClicked						form: self playButtonForm).	self updatePlayPauseButton! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addShowNormalButtonMorph	self addMorphBack: (self 				buttonName: ''				action: #showNormalButtonClicked				form: self showNormalButtonForm)! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addSpacer: anInteger 	self addMorphBack: (Morph new extent: anInteger @ 1)! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!addTrackNameMorph	self addMorphBack: ((AlignmentMorph newVariableTransparentSpacer)				color: Color transparent;				addMorphBack: (trackNameMorph := (StringMorph new)									color: Color white;									contents: 'Track Name     '))! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!buildMorph	self		orientation: #horizontal;		hResizing: #spaceFill;		vResizing: #shrinkWrap;		centering: #center;		color: Color black.	self borderWidth: 1.	self borderColor: Color gray.	self addCloseButtonMorph.	self addLEDMorph.	self addSpacer: 6.	self addPlayPauseButtonMorph.	self addSpacer: 6.	self addTrackNameMorph.	self addSpacer: 6.	self addShowNormalButtonMorph! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!buttonName: aString action: aSymbol form: aForm 	^(BorderlessIconicButton new)		target: self;		labelGraphic: aForm;		actionSelector: aSymbol;		yourself! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!closeButtonClicked	playlist stateMachine stopSelected.	self delete! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!initializeForPlaylist: aSqueakAmpPlaylist 	playlist := aSqueakAmpPlaylist.	self buildMorph! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!pauseButtonForm	^Form 		extent: 22 @ 18		depth: 32		fromArray: #(11382197 11908541 11908541 11908541 11382197 10855853 10263717 10263717 10263717 10263708 10263717 10263708 10263717 10263708 10263708 9737372 9737372 9737372 9737372 9737364 9737372 7568260 11908541 15728639 15728639 15202295 14610415 14084071 14081758 13557470 13557470 13557470 13557470 13557470 13557470 13557470 13557470 13555414 13031126 13031126 12439246 12439246 9211028 4868690 11382197 15726583 13029070 12437190 12434877 11910589 11910589 11910589 11908533 11384245 11908541 11908533 11908533 11384245 11908541 11384245 11384245 11382189 10857901 9211028 7041907 4342346 11382197 14610415 12437190 12437190 12437190 12437190 12437190 12434877 12437190 12437190 11910589 12437190 11912902 12437190 11910589 12437190 11910589 11910589 11382197 9737364 5921379 4342346 10855853 14608359 11910589 12434877 12437190 1050640 1050640 1576984 2695465 12437190 13029070 12437190 1050640 1050640 1576984 2171169 13027014 11912902 11384245 9211028 5921379 3750210 10266021 14081758 11910589 11912902 12437190 1576984 9213084 10263717 15202295 13029070 13029070 13029070 1576984 9213084 10263717 15202295 12437190 12437190 11384245 9211028 5921370 3750210 10263717 13557470 11908533 11910589 13029070 1050640 10263717 10855853 15728639 13029070 13029070 13029070 1050640 10263717 10855853 15728639 13027014 12437190 11384245 9211028 5395034 3750201 10263708 13557470 11384245 12434877 12437190 1050640 10263717 10855853 15728639 13029070 13029070 13029070 1576984 10263717 10855853 15728639 12439246 12437190 11384245 9211028 5921370 3750201 10263717 13555414 11384245 11910589 12437190 1576984 10263717 10855853 15728639 13029070 13029070 13029070 1050640 10263717 10855853 15728639 13027014 12437190 11384245 9211020 5395034 3223865 10263717 13555414 11384245 11910589 12437190 1576984 10263717 10855853 15728639 13029070 13029070 13029070 1576984 10263717 10855853 15728639 12437190 12437190 11384245 9211020 5395034 3750201 9739420 13555414 11384245 11910589 13027014 1050640 10263717 10855853 15728639 13029070 13029070 13555414 1050640 10263717 10855853 15728639 13029070 12434877 11384245 9211028 5921370 3223865 9737372 13031126 11384245 11910589 12437190 1576984 10263717 10855853 15728639 13029070 13029070 13029070 1050640 10263717 10855853 15728639 13027014 11912902 11384245 9211028 5395034 3750210 9739420 13031126 11384245 11910589 12437190 2168865 10263717 10263717 15728639 12437190 13027014 13029070 2695465 10263717 10263717 15726583 12437190 11910589 11382189 9211020 5921370 3750201 9737372 13031126 10857901 11384245 12434877 14610415 14610415 15202295 14610415 12437190 12437190 12437190 14608359 15202295 14610415 15202295 11910589 11910589 10857901 8686740 5921370 3750210 9737372 13029070 10857901 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 10857901 10855845 8684684 5921379 4342338 9737372 12439246 9213076 9211028 9211028 9211028 9211020 9211028 9211020 8684684 9211020 9211020 8684684 9211020 9211020 8684684 9211020 9211020 8684684 8684676 5921379 4342338 10263708 9211028 7041915 6513515 5921379 5921379 5921370 5395034 5395034 5395034 5395034 5395034 5395034 5395034 5395034 5921370 5395034 5921379 5921379 5921379 5921379 4342346 8092548 5395034 4342346 4342338 4342338 3750210 3750201 3750210 3750201 3750201 3750201 3750201 3750201 3750201 3223865 3750210 3750201 3750210 3750210 4342338 4342346 4868690)		offset: 0 @ 0! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!playButtonForm	^Form 		extent: 22 @ 18		depth: 32		fromArray: #(11382197 11908541 11908541 11908541 11382197 10855853 10263717 10263717 10263717 10263708 10263717 10263708 10263717 10263708 10263708 9737372 9737372 9737372 9737372 9737364 9737372 7039859 11908541 15202295 15202295 14610415 14084071 14081758 13557470 13555414 13031126 13031126 13031126 13031126 13031126 13031126 13031126 13031126 13029070 12439246 12437190 11912902 9211028 4342338 11384245 15200239 13029070 12437190 12434877 11910589 11910589 11910589 11384245 11908541 11908533 11908541 11908533 11908541 11908533 11384245 11384245 11384245 10857901 9211028 5921379 3750210 11382197 14608359 12437190 12437190 12437190 12437190 12437190 12434877 12437190 11912902 12434877 11912902 12434877 11912902 11910589 12437190 11910589 11908533 11384245 9211028 5921370 3750210 10855853 14081758 11910589 12434877 12437190 12437190 526344 1576984 12437190 13027014 12439246 13027014 12439246 13027014 12437190 13027014 12437190 11912902 11384245 9211028 5395034 3750201 10266021 13557470 11910589 11912902 12437190 13029070 526344 8684684 526344 1576984 13029070 13029070 13029070 13029070 13029070 13029070 12437190 12437190 11384245 9211028 5395034 3223865 10263717 13555414 11384245 12434877 12437190 13029070 1052688 9213084 9213084 8684684 526344 1050640 13029070 13029070 13029070 13029070 13027014 12437190 11384245 9211028 5395026 3223865 10263717 13031126 11908533 11910589 12437190 13029070 526344 9213084 9213084 9213084 9213084 8684684 526344 1050640 13029070 13029070 12439246 12437190 11384245 9211028 5395026 3223865 10263717 13029070 11384245 11910589 12437190 13029070 526344 9213084 9213084 9213084 9213084 9213084 9213084 8684684 1050640 1050640 13029070 12434877 11384245 9211020 4868690 3223865 10263708 13031126 11384245 11910589 12437190 13029070 1052688 9213084 9213084 9213084 9213084 9213084 10263717 10263717 15202295 14610415 13029070 12437190 11384245 9211028 5395026 3223865 9737372 13031126 11384245 11910589 12437190 13029070 526344 9213084 9213084 9213084 10263717 10263717 15202295 15202295 13029070 13029070 12439246 12434877 11384245 9211028 5395034 3223857 9739420 13029070 11384245 11910589 12437190 13029070 1052688 9213084 10263717 10263717 15202295 15202295 13029070 13029070 13029070 13029070 13027014 11912902 11384245 9211028 5395026 3223865 9737372 13029070 11384245 11910589 12437190 12437190 1050640 10263717 15202295 14610415 13029070 12437190 13029070 12437190 12437190 12437190 12437190 12434877 11382189 8686732 5395034 3223865 9737372 12439246 10857901 11384245 11910589 12437190 14084071 14608359 12437190 12437190 12437190 12437190 12437190 12437190 12437190 12437190 11910589 11910589 10857901 9211028 5395034 3223865 9737372 12437190 10857901 11382189 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 11384245 10857901 10266021 8684684 5395034 3750201 9737372 11912902 9737364 9213084 9737364 9211028 9211020 9211028 9211020 8684684 9211020 9211020 8684684 9211020 9211020 8684684 9211028 9211020 8684684 8684676 5395034 3750210 9737372 9737364 5921379 5921379 5395034 5395034 5395034 5395026 4868690 5395034 4868690 5395034 5395026 4868690 5395034 5395026 5395034 5395034 5395034 5395034 5921379 3750210 7566203 4342346 4342338 3750210 3750201 3750201 3223865 3223865 3223865 3223865 3223865 3223865 3223865 3223865 3223865 3223865 3223857 3223865 3750201 3750210 3750210 3750210)		offset: 0 @ 0! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!playPauseButtonClicked	playlist isPlaying 		ifTrue: [playlist stateMachine pauseSelected]		ifFalse: [playlist stateMachine playSelected].	self updatePlayPauseButton! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!showNormalButtonClicked	| position |	position := self position.	self delete.	(SqueakAmpMorph openInWindowWithCurrentPlaylist: playlist) 		position: position! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!showNormalButtonForm	^Form 		extent: 18 @ 14		depth: 32		fromArray: #(11384245 11910589 10855853 10855853 10263708 9737372 9737372 9211028 9211028 9211028 9211028 9211028 9211028 9211028 8684684 9213076 9211020 5921379 9739429 13553358 16777215 15724527 15724527 15198183 14606046 14606046 14606046 14606046 14079702 14606046 14606046 14079702 13027014 13027014 4868690 1052688 9739429 11910589 16250871 11384245 10855845 10266021 10266021 10266021 10266021 10263708 10266021 10266021 10263708 10266021 9211020 9739420 4342346 1052688 9213084 11384245 15724527 10855845 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 10263708 4342338 1052688 9211028 10855845 15724527 10855845 11711154 3750210 3750210 3750210 3750210 3750210 3750210 3750210 3750210 3750210 11711154 9737372 4342338 1052688 8686740 10266021 15198183 10266021 11711154 11711154 3750210 3750210 3750210 3750210 3750210 3750210 3750210 11711154 11711154 9737364 3750210 1052688 8094860 10266021 15198183 10266021 11711154 11711154 11711154 3750210 3750210 3750210 3750210 3750210 11711154 11711154 11711154 9735316 3750210 1052688 8094860 9739420 14606046 10266021 11711154 11711154 11711154 11711154 3750210 3750210 3750210 11711154 11711154 11711154 11711154 9211028 3750210 1052688 8094852 9739420 14079702 10266021 11711154 11711154 11711154 11711154 11711154 3750210 11711154 11711154 11711154 11711154 11711154 9737364 3750210 1052688 8092548 9739420 14079702 9737364 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 11711154 9737364 4342338 1052688 8094852 10266021 13553358 8686732 9737364 9213076 9213076 9211020 9213076 9211020 9213076 9211020 9213076 9211020 8094852 9737372 4342338 1052688 8094860 11382189 10855853 8094852 8684684 8094852 8092539 7568251 7568251 7568251 7568251 7568251 7568251 7568251 8094852 7039859 5397082 2171169 9739420 7039859 3225913 3225913 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 2699569 3225913 4342346 2699569 2171169 2171169 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 1052688 2171169)		offset: 0 @ 0! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!step	self updateDisplay! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!stepTime	^500! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!updateDisplay	elapsedLedMorph string: playlist currentFileElapsedTimeString.	trackNameMorph contents: playlist currentFileTrackTitle.	self updatePlayPauseButton! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!updatePlayPauseButton	playlist isPlaying 		ifTrue: [playPauseButtonMorph labelGraphic: self pauseButtonForm]		ifFalse: [playPauseButtonMorph labelGraphic: self playButtonForm]! !!SqueakAmpTinyMorph methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!wantsSteps	^true! !!SqueakAmpTinyMorph class methodsFor: 'as yet unclassified' stamp: 'bh 12/21/2000 02:00'!forPlaylist: aSqueakAmpPlaylist 	^self new initializeForPlaylist: aSqueakAmpPlaylist! !!SystemWindow methodsFor: 'label' stamp: 'bh 12/12/2000 14:37'!labelColor: aColor
	label color: aColor.
	closeBox labelMorph color: aColor.
	collapseBox labelMorph color: aColor.! !LedCharacterMorph initialize!"Postscript:
"

SqueakAmpMorph openInWindow.!